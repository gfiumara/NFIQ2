name: Build Libraries and CLI

on:
  pull_request:
    branches:
      - master
      - github_actions
  push:
    branches:
      - master
      - github_actions
    paths-ignore:
      - '**.md'
      - 'complianceTestSet/**'
      - '.travis.yml'
      - 'appveyor.yml'

env:
  CONFIGURATION: Release
  BUILD_NFIQ2_CLI: ON

jobs:
  build-nix:
    name: macOS/Linux

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # https://github.com/actions/virtual-environments
        os: [ubuntu-20.04, ubuntu-18.04, macOS-10.15]

    steps:
    - name: Checkout Code and Submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Packages (Linux)
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        sudo apt -y install \
            libdb++-dev \
            libhwloc-dev \
            libjpeg-dev \
            libopenjp2-7-dev \
            libpng-dev \
            libsqlite3-dev \
            libssl-dev \
            libtiff-dev \
            zlib1g-dev

    - name: Install Packages (macOS)
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        brew install \
            berkeley-db \
            hwloc \
            jpeg-turbo \
            libpng \
            libtiff \
            openjpeg \
            openssl \
            sqlite \
            zlib

    - name: OpenCV Cache
      uses: actions/cache@v2
      env:
        cache-name: OpenCV
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('opencv/modules/core/include/opencv2/core/version.hpp') }}

    - name: Biometric Evaluation Cache
      uses: actions/cache@v2
      env:
        cache-name: libbiomeval
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}

    - name: FingerJet Cache
      uses: actions/cache@v2
      env:
        cache-name: fingerjetfxose
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}

    - name: Create Build Directory
      run: cmake -E make_directory ${{ github.workspace }}/build

    - name: Get CMake Version
      shell: bash
      run: cmake --version

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake -DCMAKE_BUILD_TYPE="${CONFIGURATION}" -DBUILD_NFIQ2_CLI=${BUILD_NFIQ2_CLI} ${GITHUB_WORKSPACE}

    - name: Build
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build .

  build-win:
    name: Windows

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2016]
        arch: [x86, x64]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code and Submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: vcpkg Cache
      uses: actions/cache@v2
      env:
        cache-name: vcpkg-0
      with:
        path: ${VCPKG_INSTALLATION_ROOT}/installed
        key: ${{ matrix.os }}-${{ matrix.arch }}-${{ env.cache-name }}

    - name: OpenCV Cache
      uses: actions/cache@v2
      env:
        cache-name: OpenCV
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('opencv/modules/core/include/opencv2/core/version.hpp') }}-blowcache

    - name: Biometric Evaluation Cache
      uses: actions/cache@v2
      env:
        cache-name: libbiomeval
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}-blowcache

    - name: FingerJet Cache
      uses: actions/cache@v2
      env:
        cache-name: fingerjetfxose
      with:
        path: ${{ github.workspace }}/build/${{ env.cache-name }}
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}-blowcache

    - name: Create Build Environment
      run: cmake -E make_directory ${{ github.workspace }}\build

    - name: Install vcpkg Packages
      shell: bash
      run: |
        vcpkg install --triplet=${{ matrix.arch }}-windows-static \
          berkeleydb \
          hwloc \
          libjpeg-turbo \
          liblzma \
          libpng \
          openjpeg \
          openssl \
          sqlite3 \
          tiff \
          zlib
        # getopt is not static
        vcpkg install --triplet=${{ matrix.arch }}-windows getopt

    - name: Configure CMake
      shell: bash
      env:
        cmake_arch_flag: ${{ matrix.arch == 'x86' && 'Win32' || 'x64' }}
      working-directory: ${{ github.workspace }}\build
      run: |
        cmake \
            -A ${cmake_arch_flag} \
            -DCMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.arch }}-windows-static \
            -DCMAKE_CONFIGURATION_TYPES="${CONFIGURATION}" \
            -DBUILD_NFIQ2_CLI=${BUILD_NFIQ2_CLI} \
            ${GITHUB_WORKSPACE}

    - name: Get CMake Version
      shell: bash
      run: cmake --version

    - name: Build
      shell: bash
      working-directory: ${{ github.workspace }}\build
      run: cmake --build . --config "${CONFIGURATION}"
