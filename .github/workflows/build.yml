name: Build libnfiq2

on:
  pull_request:
    branches:
      - master
      - github_actions
  push:
    branches:
      - master
      - github_actions
    paths-ignore:
      - '**.md'
      - 'complianceTestSet/**'
      - '.travis.yml'
      - 'appveyor.yml'

env:
  CONFIGURATION: Release
  BUILD_NFIQ2_CLI: OFF
  CHECK_STYLE: OFF

jobs:
  build-nix:
    name: macOS/Linux

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # https://github.com/actions/virtual-environments
        os: [ubuntu-20.04, ubuntu-18.04, macOS-10.15, macOS-11]

    steps:
    - name: Checkout NFIQ2 and Submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: OpenCV Cache
      uses: actions/cache@v2
      env:
        cache-name: OpenCV
      with:
        path: ${{github.workspace}}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('opencv/modules/core/include/opencv2/core/version.hpp') }}

    - name: Biometric Evaluation Cache
      uses: actions/cache@v2
      env:
        cache-name: libbiomeval
      with:
        path: ${{github.workspace}}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}

    - name: NFIR Cache
      uses: actions/cache@v2
      env:
        cache-name: NFIR
      with:
        path: ${{github.workspace}}/build/${{ env.cache-name }}-prefix
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}

    - name: FingerJet Cache
      uses: actions/cache@v2
      env:
        cache-name: fingerjetfxose
      with:
        path: ${{github.workspace}}/build/${{ env.cache-name }}
        key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}

    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Get CMake Version
      shell: bash
      run: cmake --version

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_BUILD_TYPE="${CONFIGURATION}" -DBUILD_NFIQ2_CLI=${BUILD_NFIQ2_CLI} ${GITHUB_WORKSPACE}

    - name: Build All
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

  build-win:
    name: Windows (x64)

    runs-on: windows-latest

    steps:
    - name: Checkout NFIQ2 and Submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}\build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}\build
      run: |
        cmake \
            -DCMAKE_CONFIGURATION_TYPES="${CONFIGURATION}" \
            -DBUILD_NFIQ2_CLI=${BUILD_NFIQ2_CLI} \
            ${GITHUB_WORKSPACE}

    - name: Get CMake Version
      shell: bash
      run: cmake --version

    - name: Build All
      shell: bash
      working-directory: ${{github.workspace}}\build
      run: cmake --build . --config "${CONFIGURATION}"

    - name: Output CMake Error Log
      shell: bash
      working-directory: ${{github.workspace}}\build
      run: |
        cat OpenCV-prefix/src/OpenCV-build/CMakeFiles/CMakeOutput.log
        cat OpenCV-prefix/src/OpenCV-build/CMakeFiles/CMakeError.log
